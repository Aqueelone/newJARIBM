plugins {
    id 'ear'
    id 'groovy'
    id 'java'
    id 'war'
    id 'maven'
    id 'org.unbroken-dome.xjc' version '2.0.0'
}

group 'ru.sbrf.gamma'
version '1.2-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    flatDir {
        dirs 'c:\\Program Files\\IBM\\WebSphere\\AppServer\\dev'
    }
}

dependencies {
    // The following dependencies will be the ear modules and
    // will be placed in the ear root
    // deploy project(':war')

    // The following dependencies will become ear libs and will
    // be placed in a dir configured via the libDirName property
    // earlib group: 'log4j', name: 'log4j'
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.0'
    implementation 'com.ibm.websphere.appserver:was_public:9.0.0'
    implementation 'jakarta.ejb:jakarta.ejb-api:3.2.6'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
xjcGenerate {
    source.from fileTree('src/main/resources/META-INF/schemas/') { include '*/*.xsd' }
    packageLevelAnnotations = true
}
xjc {
    xjcVersion = '3.0'
}

ear {
    appDirName 'src/main/app'  // use application metadata found in this folder
    // put dependent libraries into APP-INF/lib inside the generated EAR
    libDirName 'APP-INF/lib'
    deploymentDescriptor {  // custom entries for application.xml:
//      fileName = "application.xml"  // same as the default value
//      version = "6"  // same as the default value
//      applicationName = "customear"
        initializeInOrder = true
//      displayName = "Custom Ear"  // defaults to project.name
        // defaults to project.description if not set
//      description = "My customized EAR for the Gradle documentation"
//      libraryDirectory = "APP-INF/lib"  // not needed, above libDirName setting does this
//      module("my.jar", "java")  // won't deploy as my.jar isn't deploy dependency
//      webModule("my.war", "/")  // won't deploy as my.war isn't deploy dependency
//      securityRole "admin"
//      securityRole "superadmin"
    }
}